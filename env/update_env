#!/bin/bash

# updates env with whatever new changes are found in the current environment

source "$HOME/.shell_control" || echo "$(tput bold)error: ~/.shell_control not installed!$(tput sgr0)" >&2

sync_dotfile()
{
    [[ -f "$HOME/.$1" ]] && run "rsync -apl '$HOME/.$1' ./dot_$1"
    [[ -d "$HOME/.$1/" ]] && run "rsync -apl '$HOME/.$1/' ./dot_$1"
}

sync_dotfile 'profile'
sync_dotfile 'bash_bashrc'
sync_dotfile 'bash_profile'
sync_dotfile 'complete'
sync_dotfile 'dircolors'
sync_dotfile 'gitconfig'
sync_dotfile 'hgignore'
sync_dotfile 'hgrc'
sync_dotfile 'inputrc'
sync_dotfile 'jsbeautifyrc'
sync_dotfile 'pythonrc'
sync_dotfile 'shell_control'
sync_dotfile 'toprc'
sync_dotfile 'vimrc'
sync_dotfile 'zprofile'
sync_dotfile 'zshrc'
sync_dotfile 'isort.cfg'

# also sync .profile_* dotfiles
for I in "$HOME/".profile_*; do
    if [[ ! -f ignore ]] || ! grep -q "$(basename "$I")" ignore; then
        run "rsync -apl '$I' './$(basename "$I" | sed 's/^./dot_/')'"
    fi
done

backup_atom()
{
    local atom_file="$1"
    local atom_file_path="$HOME/.atom/$atom_file"
    if [[ -f "$atom_file_path" ]]; then
        if [[ "$atom_file" == "config.cson" ]]                                 \
            && type jq >/dev/null                                              \
            && type cson2json >/dev/null                                       \
            && type json2cson >/dev/null; then
            # sort config.cson keys for consistency between updates
            local tempfile
            tempfile="$(mktemp -t tmp.XXXXXXXXXX.config.json)"
            run "cson2json '$atom_file_path' | jq -S 'del(.[\"*\"].\"atom-pair\")' >'$tempfile'"
            run "json2cson '$tempfile' >'./atom.$atom_file'"
            run "rm '$tempfile'"
        else
            run "rsync -apl '$atom_file_path' ./atom.$atom_file"
        fi
    fi
}
backup_atom "config.cson"
backup_atom "keymap.cson"
backup_atom "init.coffee"
backup_atom "styles.less"

backup_st()
{
    if [[ -e "$1/$2" ]]; then
        run "rsync -apl '$1/$2' '$2'"
    fi
}
backup_st "$HOME/Library/Application Support/Sublime Text 3/Packages/User" "Preferences.sublime-settings"
backup_st "$HOME/Library/Application Support/Sublime Text 3/Packages/User" "SublimePython.sublime-settings"
