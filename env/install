#!/bin/bash

rsync -apl dot_shell_control "$HOME/.shell_control"
source "$HOME/.shell_control" || echo "$(tput bold)error: ~/.shell_control not installed!$(tput sgr0)" >&2

sync()
{
    run "rsync -apl '$1' '$2/$1'"
}

contains()
{
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
    return 1
}

###############################################################################
# install dot files
###############################################################################

declare -a DOT_FILES
DOT_FILES=($(find ./* -maxdepth 1 -name "dot_*"))
if [[ -n "$1" ]]; then
    DOT_FILES=("$@")
fi
show "installing dot files: ${DOT_FILES[@]}..."

for I in dot_*; do
    # don't install ignored files
    if [[ -f ignore && -n "$(grep "$(basename "$I")" ignore)" ]]; then
        continue
    fi

    # don't install files that aren't dot files
    if ! contains "./$I" "${DOT_FILES[@]}"; then
        continue
    fi

    if [[ -f $I ]]; then
        # ask before installing .profile_* extension files
        if [[ -n "$(echo "$I" | grep profile_)" ]]; then
            ask "install $I?"
        else
            REPLY="y"
        fi
        if [[ "$REPLY" == "y" ]]; then
            run "rsync -apl '$I' '$HOME/.$(basename "$I" | sed s/^dot_//)'"
        fi
    elif [[ -d $I ]]; then
        # always install directory, todo: ask to install directories too?
        run "rsync -apl '$I/'* '$HOME/.$(basename "$I" | sed s/^dot_//)/'"
    else
        abort "could not install '$I'"
    fi
done

if [[ -n "$1" ]]; then
    show "dot file install complete!"
    exit 0
fi

###############################################################################
# Install bash-completion form debian:
###############################################################################
if type git 1>/dev/null 2>&1; then
    # From git:
    if [[ -d ~/.bash-completion ]]; then
        (
            run "pushd '$HOME/.bash-completion' >/dev/null"
              run "git fetch >/dev/null"
              run "git clean -f >/dev/null"
              run "git reset --hard origin/master >/dev/null"
        )
    else
        (
            run "pushd '$HOME' >/dev/null"
              run "git clone git://git.debian.org/git/bash-completion/bash-completion .bash-completion >/dev/null"
        )
    fi
else
    # From tarball:
    CURL_OUTPUT=$(mktemp -d -t tmp.XXXXXXXXXX)
    trap 'rm -rf $CURL_OUTPUT' EXIT
    LATEST_BASH_COMPLETION="$(curl -s --show-error http://bash-completion.alioth.debian.org/files/ | sed 's/.*href="\([^"]*\)">[^<]*<\/a><\/td><td align="right">\([^<]*\).*/\1 \2/g' | egrep "^bash-completion.*tar.gz " | sort -k2 -d | tail -n 1 | cut -f1 -d' ')"
    (
        run "pushd '$CURL_OUTPUT' >/dev/null"
          run "curl -s --show-error -O 'http://bash-completion.alioth.debian.org/files/$LATEST_BASH_COMPLETION'"
          run "mkdir -p '$HOME/.bash-completion'"
          run "tar xzf '$LATEST_BASH_COMPLETION' -C '$HOME/.bash-completion' --strip-components=1"
    )
fi

###############################################################################
# Install Sublime Text packages
###############################################################################
grab_package()
{
    URL="$1"
    NAME="$2"

    (
        run "pushd '$HOME/Library/Application Support/Sublime Text 3/Packages' >/dev/null"
        if [[ -d "$NAME" ]]; then
            ( run "pushd '$NAME' >/dev/null"; run "git pull -u >/dev/null" )
        else
            run "git clone '$URL' '$NAME'"
        fi
    )
}

if [[ -d "$HOME/Library/Application Support/Sublime Text 3/Packages/User" ]]; then
    grab_package "https://github.com/buymeasoda/soda-theme.git" "Theme - Soda"
    grab_package "https://github.com/JulianEberius/SublimePythonIDE.git" "SublimePythonIDE"
    sync "Preferences.sublime-settings" "$HOME/Library/Application Support/Sublime Text 3/Packages/User"
    sync "SublimePython.sublime-settings" "$HOME/Library/Application Support/Sublime Text 3/Packages/User"
fi

show "env install complete!"
