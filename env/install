#!/bin/bash

function sync()
{
	CMD="rsync -avl \"$1\" \"$2/$1\""
	echo "+ $CMD"
	eval $CMD
}

###############################################################################
# install dot files
###############################################################################

for I in dot_*; do
	if [[ -f $I ]]; then
		if [[ -n "$(echo $I | grep bashrc_)" ]]; then
			read -p "install $I? (y/n) [n] ... "
		else
			REPLY="y"
		fi
		if [[ "$REPLY" == "y" ]]; then
			CMD="rsync -avl $I ~/.$(echo $(basename $I) | sed s/^dot_//)"
			echo "+ $CMD"
			eval $CMD
		fi
	elif [[ -d $I ]]; then
		CMD="rsync -avl $I/* ~/.$(echo $(basename $I) | sed s/^dot_//)"
		echo "+ $CMD"
		eval $CMD
	else
		echo "error: could not install '$I'" >&2
	fi
done

###############################################################################
# Install bash-completion form debian:
###############################################################################
if type git 2>/dev/null; then
	# From git:
	if [[ -d ~/.bash-completion ]]; then
		cd ~/.bash-completion
		git fetch 
		git clean -f 
		git reset --hard origin/master
		cd -
	else
		cd ~
		git clone git://git.debian.org/git/bash-completion/bash-completion .bash-completion
		cd -
	fi
else
	# From tarball:
	CURL_OUTPUT=$(mktemp -d -t tmp.XXXXXXXXXX)
	trap "rm -rf $CURL_OUTPUT" EXIT
	LATEST_BASH_COMPLETION="$(curl -s --show-error http://bash-completion.alioth.debian.org/files/ | sed 's/.*href="\([^"]*\)">[^<]*<\/a><\/td><td align="right">\([^<]*\).*/\1 \2/g' | egrep "^bash-completion.*tar.gz " | sort -k2 -d | tail -n 1 | cut -f1 -d' ')"
	pushd "$CURL_OUTPUT"
	curl -s --show-error -O "http://bash-completion.alioth.debian.org/files/$LATEST_BASH_COMPLETION"
	mkdir -p "$HOME/.bash-completion"; tar xvzf "$LATEST_BASH_COMPLETION" -C "$HOME/.bash-completion" --strip-components=1
	popd
fi

###############################################################################
# Install Sublime Text packages
###############################################################################
function grab_package()
{
	URL="$1"
	NAME="$2"

	pushd ~/"Library/Application Support/Sublime Text 3/Packages"
	if [[ -d "$NAME" ]]; then
		pushd "$NAME"
		git pull -u
		popd
	else
		git clone "$URL" "$NAME"
	fi
	popd
}

if [[ -d "$HOME/Library/Application Support/Sublime Text 3/Packages/User" ]]; then
	sync "Preferences.sublime-settings" ~/"Library/Application Support/Sublime Text 3/Packages/User"
	sync "SublimeClang.sublime-settings" ~/"Library/Application Support/Sublime Text 3/Packages/User"
	sync "SublimePython.sublime-settings" ~/"Library/Application Support/Sublime Text 3/Packages/User"

	grab_package https://github.com/netatoo/phoenix-theme/ "Theme - Phoenix"
	grab_package https://github.com/JulianEberius/SublimePythonIDE.git "SublimePythonIDE"

	# SublimeClang not supported in Sublime Text 3 and also not in current development anymore
	# grab_package https://github.com/quarnster/SublimeClang.git "SublimeClang"
fi
