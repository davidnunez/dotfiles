#!/bin/bash

# Installs Atom IDE with custom style and packages.

################################################################################
# This script will install Atom and the following apm packages:
################################################################################
ATOM_PACKAGES="
    atom-soda-dark-ui
    autocomplete-plus
    linter
    linter-flake8
    linter-shellcheck
    merge-conflicts
    minimap
    minimap-git-diff
    minimap-selection
    monokai-soda
    red-wavy-underline
    set-syntax
    sort-lines
    tabs-to-spaces
"

################################################################################
# Utilities
################################################################################
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
	echo "usage: ${0##*/} [-h|--help]"
	echo "Installs Atom IDE including packages and editor configuration."
    echo "The following atom packages are included:"
    echo "$ATOM_PACKAGES"
	exit 1
fi

source "$HOME/.shell_control" || echo "$(tput bold)error: ~/.shell_control not installed!$(tput sgr0)" >&2

################################################################################
# Install Atom
################################################################################
ATOM_ZIP="/tmp/atom.zip"

unzip_atom_into_applications()
{
    run "wget -c 'https://atom.io/download/mac' -O $ATOM_ZIP" || abort "can't download Atom"
    run "unzip /tmp/atom.zip -d /Applications 1>/dev/null" || abort "can't install Atom"
}

if [[ -d "/Applications/Atom.app" ]]; then
    ask "Uninstall existing Atom?"
    if [[ "$REPLY" == "y" ]]; then
        run "rm -rf '/Applications/Atom.app'" || abort "can't uninstall existing Atom"
        run "rm -f /usr/local/bin/atom" || abort "can't uninstall existing Atom"
        run "rm -f /usr/local/bin/apm" || abort "can't uninstall existing Atom"
        unzip_atom_into_applications
    fi
else
    unzip_atom_into_applications
fi

################################################################################
# Make sure Atom command line tools are installed
################################################################################
if ! apm --help >/dev/null 2>&1; then
    # Start Atom for the first time
    ATOM_INSTALL_NOTICE="/tmp/atom-install-notice"
    cat > $ATOM_INSTALL_NOTICE <<EOF
Atom packages are currently being installed. Atom will restart shortly...
EOF
    run "open -Fg /Applications/Atom.app --args $ATOM_INSTALL_NOTICE" || abort "can't launch Atom"

    # Wait for Atom to install command lines tools
    show "waiting on Atom..."
    while ! apm --help >/dev/null 2>&1; do :; done
    while ! atom --help >/dev/null 2>&1; do :; done
fi

################################################################################
# Install desired Atom packages
################################################################################
install_pkg()
{
    local PKG="$1"
    local INSTALLED="$(apm list --installed --bare | grep "$PKG")"
    if [[ -z "$INSTALLED" ]]; then
        run "apm install $PKG" || abort "can not install package '$PKG'"
    else
        show "skipping $PKG: already installed"
    fi
}

show "installing Atom packages..."
for I in $ATOM_PACKAGES; do
    install_pkg "$I"
done

################################################################################
# Restart Atom
################################################################################
show "restarting Atom..."
run "osascript -e 'tell application \"Atom\" to quit' 2>/dev/null"
run "sleep 1" # give application time to quit
run "open -F /Applications/Atom.app"
